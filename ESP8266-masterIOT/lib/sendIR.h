#ifndef _sendIR_H
#define _sendIR_H
#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

IRsend IRsensor(4); // pin IR

#define frequency 38

uint16_t turnON[] = {9050,4500, 550,1700, 550,1700, 550,550, 600,550, 600,550, 600,550, 550,550, 600,1700, 550,550, 600,1650, 600,1650, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 600,1650, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,1650, 600,550, 600,550, 600,1650, 600,550, 600,1650, 600,550, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 600,500, 650,500, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600};
uint16_t code18[] = {9000,4500, 600,1650, 600,1650, 600,550, 600,550, 550,550, 600,550, 600,550, 600,1650, 600,550, 550,1700, 550,1700, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 550,550, 600,1650, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600,550, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 600}; 
uint16_t code23[] = {9050,4450, 600,1650, 600,1650, 600,550, 600,550, 600,550, 600,500, 600,550, 600,1650, 600,550, 550,1700, 550,1700, 550,600, 600,550, 550,550, 600,550, 600,550, 550,600, 550,550, 600,550, 600,550, 600,550, 550,550, 600,550, 550,600, 600,550, 600,1650, 600,500, 600,550, 650,1600, 600,550, 600,1650, 600,550, 600,550, 600,500, 600,550, 600,550, 550,600, 550,550, 600,550, 600,550, 600,550, 600,500, 600,550, 600,550, 550,600, 550,550, 600,550, 600,550, 600};



void SendIR(byte index){

    switch (index){
        case 0:
            IRsensor.sendRaw(turnON,  sizeof(turnON) / sizeof(turnON[0]), frequency);  // Send a raw data capture at 38kHz.
            delay(50);
        break;

        case 1:
            IRsensor.sendRaw(code18,  sizeof(code18) / sizeof(code18[0]), frequency);  // Send a raw data capture at 38kHz.
            delay(50);
        break;

        case 2:
            IRsensor.sendRaw(code23,  sizeof(code23) / sizeof(code23[0]), frequency);  // Send a raw data capture at 38kHz.
            delay(50);
        break;

    }

}

#endif